
#####################################################################
#                   ACCLAIM SETTINGS
#####################################################################

# This is a settings file for the Acclaim analysis
# It gets parsed by the Acclaim::AnalysisSettings class
# It uses ROOT's inbuild reflection mechanisms to set variable values
# The sections enclosed in square brackets correspond to class names
# in ROOT. The key/value pairs in each section are member variables
# of that class, and the values to which they should be set.
# Setting a variable here requires that the member variable have
# getter/setter member functions matching ROOT's expectations.
# See https://root.cern.ch/doc/master/classTDataMember.html 
# or look at currently implemented members.

[Acclaim::AnalysisReco]
fCoherentDeltaPhi=2
fUseOffAxisDelay=1
# Picks out subdirectory in $ANITA_UTIL_INSTALL_DIR/share/AnitaAnalysisFramework/responses/
fWhichResponseDir=1 # Index to pick between "HarmSignalOnly" "IndividualBRotter" "SingleBRotter"
fResponseNPad=0 # Padding for response, not quite sure what this does...
fNumPeaks=1 #How many peaks to find
fDoHeatMap=0 # Project interferometric maps onto a TProfile2D?
fHeatMapHorizonKm=700.0 # distance to horizon in the heat map
fCoherentDtNs=0.01 # Try 10 picoseconds
fDebug=0
fFillChannelInfo=0 # Fill Peng's channel info object?
fFillSpectrumInfo=0 # Fill the spectrum info bit of the various WaveformInfo

# For the spectral slope fit to the psd of coherenty summed wave
fSlopeFitStartFreqGHz=0.18 # Start frequency (GHz) 
fSlopeFitEndFreqGHz=1.3 # End frequency (GHz)

[Acclaim::AnalysisFlow]
fDoAll=1 # If 0 then don't skip events based on quality settings
fNoiseTimeScaleSeconds=10.0 # Number of seconds to average noise over
fNoiseEvenWaveforms=0 # Which AnaysisWaveform data? 0 for uneven waveforms (uninterpolated), 1 for even (interpolated)
fOutFileCompressionLevel=9 # Set the compression level of the output file (-1 for default)
fOutFileCompressionAlgo=2 # Set the compression algorithm (see ROOT::ECompressionAlgorithm in Compression.h)
fDebug=0